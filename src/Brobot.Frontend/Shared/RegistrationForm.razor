@inject ApiService ApiService
@inject NavigationManager NavigationManager

<div>
    <h1>Register</h1>
</div>

@if (_registrationSuccessful)
{
    <p>Registration Successful!</p>
    <div>
        <button type="button" class="btn btn-primary" @onclick="RedirectToLogin">
            Login
        </button>
    </div>
}
else
{
    <EditForm Model="@_registerRequest" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        @if (_errorMessage.Length != 0)
        {
            <div class="row">
                <em style="color: red">@_errorMessage</em>
            </div>
        }
        <div class="row my-3">
            <div class="form-group col-lg-6">
                <label>Email</label>
                <InputText class="form-control" type="email" @bind-Value="_registerRequest.EmailAddress" />
            </div>
        </div>
        <div class="row my-3">
            <div class="form-group col-lg-6">
                <label>Password</label>
                <InputText class="form-control" type="password" @bind-Value="_registerRequest.Password" />
            </div>
        </div>
        <div class="row my-3">
            <div class="form-group col-lg-6">
                <label>Confirm Password</label>
                <InputText class="form-control" type="password" @bind-Value="_registerRequest.ConfirmPassword" />
            </div>
        </div>
        <div class="row my-3">
            <div class="form-group col-lg-3 offset-lg-3">
                <button class="btn btn-primary form-control" disabled="@_loading">
                    @if (_loading)
                    {
                        <span class="spinner-border spinner-border-sm mr-1"></span>
                    }
                    Register
                </button>
            </div>
        </div>
    </EditForm>
}

@code {
    private bool _loading = false;
    private string _errorMessage = "";
    private bool _registrationSuccessful = false;
    private const string GenericError = "Unable to register at this time. Please try again. If this problem persists, contact your Brobot admin";
    private RegisterRequest _registerRequest = new RegisterRequest
    {
        EmailAddress = "",
        Password = "",
        ConfirmPassword = ""
    };

    private async Task OnValidSubmit()
    {
        try
        {
            _loading = true;
            var registrationResponse = await ApiService.RegisterUser(_registerRequest);
            _loading = false;
            if (registrationResponse is { Succeeded: true })
            {
                _registrationSuccessful = true;
            }
            else if (registrationResponse?.Errors != null && registrationResponse.Errors.Any())
            {
                _errorMessage = registrationResponse.Errors?.FirstOrDefault() ?? GenericError;
            }
            else
            {
                _errorMessage = GenericError;
            }

        }
        catch (Exception)
        {
            _errorMessage = GenericError;
        }
    }

    private void RedirectToLogin() => NavigationManager.NavigateTo("/login");
}