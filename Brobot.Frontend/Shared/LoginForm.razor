@inject ApiService Api
@inject NavigationManager NavigationManager
@inject JwtAuthenticationStateProvider JwtAuthenticationStateProvider

<h1>Login</h1>

<EditForm Model="@loginRequest" OnValidSubmit="OnValidSubmit">
    <div class="form-group">
        <label>Email</label>
        <InputText @bind-Value="loginRequest.Email" class="form-control" />
    </div>
    <div>
        <label>Password</label>
        <InputText @bind-Value="loginRequest.Password" type="password" class="form-control" />
    </div>
    <button disabled="@loading" class="btn btn-primary">
        @if (loading)
        {
            <span class="spinner-border spinner-border-sm mr-1"></span>
        }
        Login
    </button>
</EditForm>

@code {
    private Brobot.Shared.Requests.LoginRequest loginRequest = new Brobot.Shared.Requests.LoginRequest
    {
        Email = "",
        Password = ""
    };
    private bool loading;

    private async Task OnValidSubmit()
    {
        loading = true;
        try
        {
            var loginResponse = await Api.Login(loginRequest);
            if (loginResponse?.Token != null)
            {
                JwtAuthenticationStateProvider.Login(loginResponse.Token);
                Console.WriteLine("Successfully logged in!");
                NavigationManager.NavigateTo("/");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}