name: Build and Deploy Docker Image

on:
  push:
    tags:
      - 'v*'   # Only trigger on tags like v1.2.3

jobs:
  build:
    name: Build and Push Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: evanlundell/brobot
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest

      - name: Extract tag name
        id: vars
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=${RAW_TAG#v}
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./src/Brobot/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ env.VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to Home Server
    runs-on: ubuntu-latest
    needs: build  # <- waits for build to finish
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.HOME_SERVER_SSH_KEY }}

      - name: Extract tag name
        id: vars
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no deploy@your.home.ip << EOF
            set -e
            docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
            cd /home/deploy/myapp
            echo "IMAGE_TAG=${{ env.IMAGE_TAG }}" > .env
            docker compose pull
            docker compose up -d
          EOF
